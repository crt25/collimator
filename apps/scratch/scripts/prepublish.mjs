/* eslint-disable no-undef */
// File copied from https://github.com/scratchfoundation/scratch-gui/blob/e4105cf7d9c0fa77e1cf9d79252a03f2f053b862/scripts/prepublish.mjs
// It was modified to write the generated file to the git submodule instead of the project root.
// Also the file is added to the git LFS instead of downloading it from the internet.

// From the NPM docs:
// "If you need to perform operations on your package before it is used, in a way that is not dependent on the
// operating system or architecture of the target system, use a prepublish script."
// Once this step is complete, a developer should be able to work without an Internet connection.
// See also: https://docs.npmjs.com/cli/using-npm/scripts

import fs, { copyFileSync } from "fs";
import path from "path";

import { fileURLToPath } from "url";

// these aren't set in ESM mode
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// base/root path for the project
const basePath = path.join(__dirname, "..");

const hexFileName = "scratch-microbit-1.2.0.hex";

const downloadMicrobitHex = async () => {
  const hexFile = path.join(basePath, "assets", hexFileName);
  const relativeHexDir = path.join(
    basePath,
    "src",
    "scratch",
    "scratch-gui",
    "static",
    "microbit",
  );
  const relativeHexFile = path.join(relativeHexDir, hexFileName);

  fs.mkdirSync(relativeHexDir, { recursive: true });
  copyFileSync(hexFile, relativeHexFile);

  // EDIT: Write to the git submodule
  const relativeGeneratedDir = path.join(
    "src",
    "scratch",
    "scratch-gui",
    "src",
    "generated",
  );
  const relativeGeneratedFile = path.join(
    relativeGeneratedDir,
    "microbit-hex-url.cjs",
  );
  const absoluteGeneratedDir = path.join(basePath, relativeGeneratedDir);
  fs.mkdirSync(absoluteGeneratedDir, { recursive: true });
  const absoluteGeneratedFile = path.join(basePath, relativeGeneratedFile);
  const requirePath = `./${path
    .relative(relativeGeneratedDir, relativeHexFile)
    .split(path.win32.sep)
    .join(path.posix.sep)}`;
  fs.writeFileSync(
    absoluteGeneratedFile,
    [
      "/* eslint-disable no-undef */",
      "// This file is generated by scripts/prepublish.mjs",
      "// Do not edit this file directly",
      "// This file relies on a loader to turn this `require` into a URL",
      `module.exports = require("${requirePath}");`,
      "", // final newline
    ].join("\n"),
  );
  console.info(`Wrote ${relativeGeneratedFile}`);
};

const prepublish = async () => {
  await downloadMicrobitHex();
};

prepublish().then(
  () => {
    console.info("Prepublish script complete");
    process.exit(0);
  },
  (e) => {
    console.error(e);
    process.exit(1);
  },
);
