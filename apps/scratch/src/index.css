body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html,
body,
#root {
  /* this CSS block is copied over from the scratch codebase */
  /* probably unecessary, transitional until layout is refactored */
  width: 100%;
  height: 100%;
  margin: 0;

  /* Setting min height/width makes the UI scroll below those sizes */
  min-width: 1024px;
  min-height: 640px; /* Min height to fit sprite/backdrop button */
}

* {
  box-sizing: border-box;
}

.enabled-block-button,
.disabled-block-button {
  cursor: pointer;

  text {
    fill: white;
  }

  rect {
    fill: black;
  }
}

.enabled-block-button rect {
  fill: green;
}

.disabled-block-button rect {
  fill: red;
}

.d-contents {
  display: contents;
}

.non-interactive {
  pointer-events: none;
  user-select: none;

  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    background: rgba(255, 255, 255, 0.5);
  }
}

.frozen-block {
  /*
    make all children non-interactive except for sub-blocks.
    in the future, users may be allowed to interact with sub-blocks in the stack.
  */
  & > *:not(.blocklyDraggable) {
    pointer-events: none;
    user-select: none;
  }
}

/*
  disable pointer events on all rects. you can still grab the block via the svg group element.
  however, without this rule, it is possible to drag the rect even though the corresponding block is disabled.
*/
.blocklyFlyout rect:not(.interactive) {
  pointer-events: none;
}
